{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Gilang\\\\Projects\\\\GRH-MERN\\\\frontend\\\\src\\\\elements\\\\Form\\\\InputNumber\\\\InputNumber.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport \"./InputNumber.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Number(props) {\n  _s();\n\n  const {\n    value,\n    placeholder,\n    name,\n    min,\n    max,\n    prefix,\n    suffix\n  } = props;\n  const [InputValue, setInputValue] = useState(`${prefix}${value}${suffix}`);\n\n  const onChange = e => {\n    let value = String(e.target.value);\n    if (prefix) value = value.replace(prefix);\n    if (suffix) value = value.replace(suffix);\n    const patternNumeric = new RegExp(\"[0-9]*\");\n    const isNumeric = patternNumeric.test(value);\n\n    if (isNumeric && +value <= max && +value >= min) {\n      props.onChange({\n        target: {\n          name: name,\n          value: +value\n        }\n      });\n      setInputValue(`${prefix}${value}${suffix}`);\n    }\n  };\n\n  const minus = () => {\n    value > min && onChange({\n      target: {\n        name: name,\n        value: +value - 1\n      }\n    });\n  };\n\n  const plus = () => {\n    value < max && onChange({\n      target: {\n        name: name,\n        value: +value + 1\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: [\"input-number mb-3\", props.outerClassName].join(\" \"),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-prepend\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-text minus\",\n          onClick: minus,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        min: min,\n        max: max,\n        name: name,\n        pattern: \"[0-9]*\",\n        className: \"form-control\",\n        placeholder: placeholder ? placeholder : \"0\",\n        value: String(InputValue),\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-append\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-text plus\",\n          onClick: plus,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Number, \"Xhuifgi/PXOMOUjwlZn5dLGpGYo=\");\n\n_c = Number;\nNumber.defaultProps = {\n  min: 1,\n  max: 1,\n  prefix: \"\",\n  suffix: \"\"\n};\nNumber.propTypes = {\n  value: propTypes.oneOfType([propTypes.string, propTypes.number]),\n  onChange: propTypes.func,\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Number\");","map":{"version":3,"sources":["C:/Users/USER/Documents/Gilang/Projects/GRH-MERN/frontend/src/elements/Form/InputNumber/InputNumber.js"],"names":["React","useState","propTypes","Number","props","value","placeholder","name","min","max","prefix","suffix","InputValue","setInputValue","onChange","e","String","target","replace","patternNumeric","RegExp","isNumeric","test","minus","plus","outerClassName","join","defaultProps","oneOfType","string","number","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,oBAAP;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACpC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA,GAA5B;AAAiCC,IAAAA,GAAjC;AAAsCC,IAAAA,MAAtC;AAA8CC,IAAAA;AAA9C,MAAyDP,KAA/D;AAEA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAE,GAAES,MAAO,GAAEL,KAAM,GAAEM,MAAO,EAA5B,CAA5C;;AAEA,QAAMG,QAAQ,GAAIC,CAAD,IAAO;AACtB,QAAIV,KAAK,GAAGW,MAAM,CAACD,CAAC,CAACE,MAAF,CAASZ,KAAV,CAAlB;AACA,QAAIK,MAAJ,EAAYL,KAAK,GAAGA,KAAK,CAACa,OAAN,CAAcR,MAAd,CAAR;AACZ,QAAIC,MAAJ,EAAYN,KAAK,GAAGA,KAAK,CAACa,OAAN,CAAcP,MAAd,CAAR;AAEZ,UAAMQ,cAAc,GAAG,IAAIC,MAAJ,CAAW,QAAX,CAAvB;AACA,UAAMC,SAAS,GAAGF,cAAc,CAACG,IAAf,CAAoBjB,KAApB,CAAlB;;AAEA,QAAIgB,SAAS,IAAI,CAAChB,KAAD,IAAUI,GAAvB,IAA8B,CAACJ,KAAD,IAAUG,GAA5C,EAAiD;AAC/CJ,MAAAA,KAAK,CAACU,QAAN,CAAe;AACbG,QAAAA,MAAM,EAAE;AACNV,UAAAA,IAAI,EAAEA,IADA;AAENF,UAAAA,KAAK,EAAE,CAACA;AAFF;AADK,OAAf;AAMAQ,MAAAA,aAAa,CAAE,GAAEH,MAAO,GAAEL,KAAM,GAAEM,MAAO,EAA5B,CAAb;AACD;AACF,GAjBD;;AAmBA,QAAMY,KAAK,GAAG,MAAM;AAClBlB,IAAAA,KAAK,GAAGG,GAAR,IACEM,QAAQ,CAAC;AACPG,MAAAA,MAAM,EAAE;AACNV,QAAAA,IAAI,EAAEA,IADA;AAENF,QAAAA,KAAK,EAAE,CAACA,KAAD,GAAS;AAFV;AADD,KAAD,CADV;AAOD,GARD;;AASA,QAAMmB,IAAI,GAAG,MAAM;AACjBnB,IAAAA,KAAK,GAAGI,GAAR,IACEK,QAAQ,CAAC;AACPG,MAAAA,MAAM,EAAE;AACNV,QAAAA,IAAI,EAAEA,IADA;AAENF,QAAAA,KAAK,EAAE,CAACA,KAAD,GAAS;AAFV;AADD,KAAD,CADV;AAOD,GARD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAE,CAAC,mBAAD,EAAsBD,KAAK,CAACqB,cAA5B,EAA4CC,IAA5C,CAAiD,GAAjD,CAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,wBAAhB;AAAyC,UAAA,OAAO,EAAEH,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAO,QAAA,GAAG,EAAEf,GAAZ;AAAiB,QAAA,GAAG,EAAEC,GAAtB;AAA2B,QAAA,IAAI,EAAEF,IAAjC;AAAuC,QAAA,OAAO,EAAC,QAA/C;AAAwD,QAAA,SAAS,EAAC,cAAlE;AAAiF,QAAA,WAAW,EAAED,WAAW,GAAGA,WAAH,GAAiB,GAA1H;AAA+H,QAAA,KAAK,EAAEU,MAAM,CAACJ,UAAD,CAA5I;AAA0J,QAAA,QAAQ,EAAEE;AAApK;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,uBAAhB;AAAwC,UAAA,OAAO,EAAEU,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA3DuBrB,M;;KAAAA,M;AA6DxBA,MAAM,CAACwB,YAAP,GAAsB;AACpBnB,EAAAA,GAAG,EAAE,CADe;AAEpBC,EAAAA,GAAG,EAAE,CAFe;AAGpBC,EAAAA,MAAM,EAAE,EAHY;AAIpBC,EAAAA,MAAM,EAAE;AAJY,CAAtB;AAOAR,MAAM,CAACD,SAAP,GAAmB;AACjBG,EAAAA,KAAK,EAAEH,SAAS,CAAC0B,SAAV,CAAoB,CAAC1B,SAAS,CAAC2B,MAAX,EAAmB3B,SAAS,CAAC4B,MAA7B,CAApB,CADU;AAEjBhB,EAAAA,QAAQ,EAAEZ,SAAS,CAAC6B,IAFH;AAGjBzB,EAAAA,WAAW,EAAEJ,SAAS,CAAC2B,MAHN;AAIjBJ,EAAAA,cAAc,EAAEvB,SAAS,CAAC2B;AAJT,CAAnB","sourcesContent":["import React, { useState } from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./InputNumber.scss\";\r\n\r\nexport default function Number(props) {\r\n  const { value, placeholder, name, min, max, prefix, suffix } = props;\r\n\r\n  const [InputValue, setInputValue] = useState(`${prefix}${value}${suffix}`);\r\n\r\n  const onChange = (e) => {\r\n    let value = String(e.target.value);\r\n    if (prefix) value = value.replace(prefix);\r\n    if (suffix) value = value.replace(suffix);\r\n\r\n    const patternNumeric = new RegExp(\"[0-9]*\");\r\n    const isNumeric = patternNumeric.test(value);\r\n\r\n    if (isNumeric && +value <= max && +value >= min) {\r\n      props.onChange({\r\n        target: {\r\n          name: name,\r\n          value: +value,\r\n        },\r\n      });\r\n      setInputValue(`${prefix}${value}${suffix}`);\r\n    }\r\n  };\r\n\r\n  const minus = () => {\r\n    value > min &&\r\n      onChange({\r\n        target: {\r\n          name: name,\r\n          value: +value - 1,\r\n        },\r\n      });\r\n  };\r\n  const plus = () => {\r\n    value < max &&\r\n      onChange({\r\n        target: {\r\n          name: name,\r\n          value: +value + 1,\r\n        },\r\n      });\r\n  };\r\n  return (\r\n    <div className={[\"input-number mb-3\", props.outerClassName].join(\" \")}>\r\n      <div className=\"input-group\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text minus\" onClick={minus}>\r\n            -\r\n          </span>\r\n        </div>\r\n        <input min={min} max={max} name={name} pattern=\"[0-9]*\" className=\"form-control\" placeholder={placeholder ? placeholder : \"0\"} value={String(InputValue)} onChange={onChange} />\r\n        <div className=\"input-group-append\">\r\n          <span className=\"input-group-text plus\" onClick={plus}>\r\n            +\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nNumber.defaultProps = {\r\n  min: 1,\r\n  max: 1,\r\n  prefix: \"\",\r\n  suffix: \"\",\r\n};\r\n\r\nNumber.propTypes = {\r\n  value: propTypes.oneOfType([propTypes.string, propTypes.number]),\r\n  onChange: propTypes.func,\r\n  placeholder: propTypes.string,\r\n  outerClassName: propTypes.string,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}