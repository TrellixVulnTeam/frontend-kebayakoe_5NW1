{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Gilang\\\\Projects\\\\SetiawanStore\\\\frontend\\\\src\\\\elements\\\\Form\\\\InputFile\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function File(props) {\n  _s();\n\n  const [FileName, setFileName] = useState(\"\");\n  const {\n    value,\n    placeholder,\n    name,\n    accept,\n    prepend,\n    append,\n    outerClassName,\n    inputClassName\n  } = props;\n  const refInputFile = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: [\"input-text mb-3\", outerClassName].join(\" \"),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [prepend && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-prepend bg-gray-900\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-text\",\n          children: prepend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        accept: accept,\n        ref: refInputFile,\n        name: name,\n        className: \"d-none\",\n        type: \"file\",\n        value: value,\n        onChange: props.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: () => refInputFile.current.click(),\n        defaultValue: value,\n        placeholder: placeholder,\n        className: [\"form-control\", inputClassName].join(\" \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), append && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-append bg-gray-900\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-text\",\n          children: append\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(File, \"uHJ89s72J/pkJnAMau/gZWyxcc8=\");\n\n_c = File;\nFile.defaultProps = {\n  placeholder: \"Browse a file...\"\n};\nFile.propTypes = {\n  name: propTypes.string.isRequired,\n  accept: propTypes.string.isRequired,\n  value: propTypes.string.isRequired,\n  onchange: propTypes.func.isRequired,\n  prepend: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  append: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string,\n  inputClassName: propTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"File\");","map":{"version":3,"sources":["C:/Users/USER/Documents/Gilang/Projects/SetiawanStore/frontend/src/elements/Form/InputFile/index.js"],"names":["React","useRef","useState","propTypes","File","props","FileName","setFileName","value","placeholder","name","accept","prepend","append","outerClassName","inputClassName","refInputFile","join","onChange","current","click","defaultProps","string","isRequired","onchange","func","oneOfType","number"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function File(props) {\r\n  const [FileName, setFileName] = useState(\"\");\r\n\r\n  const { value, placeholder, name, accept, prepend, append, outerClassName, inputClassName } = props;\r\n\r\n  const refInputFile = useRef(null);\r\n\r\n  return (\r\n    <div className={[\"input-text mb-3\", outerClassName].join(\" \")}>\r\n      <div className=\"input-group\">\r\n        {prepend && (\r\n          <div className=\"input-group-prepend bg-gray-900\">\r\n            <span className=\"input-group-text\">{prepend}</span>\r\n          </div>\r\n        )}\r\n        <input accept={accept} ref={refInputFile} name={name} className=\"d-none\" type=\"file\" value={value} onChange={props.onChange} />\r\n        <input onClick={() => refInputFile.current.click()} defaultValue={value} placeholder={placeholder} className={[\"form-control\", inputClassName].join(\" \")} />\r\n        {append && (\r\n          <div className=\"input-group-append bg-gray-900\">\r\n            <span className=\"input-group-text\">{append}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nFile.defaultProps = {\r\n  placeholder: \"Browse a file...\",\r\n};\r\n\r\nFile.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  accept: propTypes.string.isRequired,\r\n  value: propTypes.string.isRequired,\r\n  onchange: propTypes.func.isRequired,\r\n  prepend: propTypes.oneOfType([propTypes.number, propTypes.string]),\r\n  append: propTypes.oneOfType([propTypes.number, propTypes.string]),\r\n  placeholder: propTypes.string,\r\n  outerClassName: propTypes.string,\r\n  inputClassName: propTypes.string,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}