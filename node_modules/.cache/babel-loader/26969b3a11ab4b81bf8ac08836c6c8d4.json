{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Gilang\\\\Projects\\\\SetiawanStore\\\\frontend\\\\src\\\\elements\\\\Form\\\\InputDate\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\nimport { DatePicker } from \"react-datepicker\";\nimport \"./index.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport iconCalendar from \"assets/images/icons/icon-calendar.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputDate(props) {\n  _s();\n\n  // const [selectDate, setSelectDate] = useState(new Date());\n  // //   const [selectDate, setSelectDate] = useState(null);\n  // const onChange = (selectDate) => {\n  //   setSelectDate(selectDate);\n  // };\n  const [value, placeholder, name] = props;\n  const [isShowed, setIsShowed] = useState(false);\n\n  const datePickerChange = value => {\n    const target = {\n      target: {\n        value: value.selection,\n        name: name\n      }\n    };\n    props.onChange(target);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n  const refDate = useRef(null);\n\n  const handleClickOutside = event => {\n    if (refDate && !refDate.current.contains(event.target)) {\n      setIsShowed(false);\n    }\n  };\n\n  const check = focus => {\n    focus.indexOf(1) < 0 && setIsShowed(false);\n  }; // const displayDate = `${}`\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group-prepend bg-gray-900\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"input-group-text\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: iconCalendar,\n          alt: \"icon calendar\",\n          className: \"input-group-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        className: \" form-control text-center\",\n        selected: isShowed,\n        onChange: onChange,\n        value: isShowed,\n        dateFormat: \"dd/MM/yyyy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputDate, \"ZLOwXXRKtCs5wd+ODT29sKQXKE0=\");\n\n_c = InputDate;\nDate.propTypes = {\n  value: propTypes.func,\n  onChange: propTypes.func,\n  placehoder: propTypes.string,\n  outerClassName: propTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"InputDate\");","map":{"version":3,"sources":["C:/Users/USER/Documents/Gilang/Projects/SetiawanStore/frontend/src/elements/Form/InputDate/index.js"],"names":["React","useState","useRef","useEffect","propTypes","DatePicker","InputDate","props","value","placeholder","name","isShowed","setIsShowed","datePickerChange","target","selection","onChange","document","addEventListener","handleClickOutside","removeEventListener","refDate","event","current","contains","check","focus","indexOf","iconCalendar","Date","func","placehoder","string","outerClassName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,cAAP;AACA,OAAO,4CAAP;;;AAIA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,KAAD,EAAQC,WAAR,EAAqBC,IAArB,IAA6BH,KAAnC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMY,gBAAgB,GAAIL,KAAD,IAAW;AAClC,UAAMM,MAAM,GAAG;AACbA,MAAAA,MAAM,EAAE;AACNN,QAAAA,KAAK,EAAEA,KAAK,CAACO,SADP;AAENL,QAAAA,IAAI,EAAEA;AAFA;AADK,KAAf;AAMAH,IAAAA,KAAK,CAACS,QAAN,CAAeF,MAAf;AACD,GARD;;AAUAX,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCC,kBAAvC;AAEA,WAAO,MAAM;AACXF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,WAA7B,EAA0CD,kBAA1C;AACD,KAFD;AAGD,GANQ,CAAT;AAQA,QAAME,OAAO,GAAGnB,MAAM,CAAC,IAAD,CAAtB;;AACA,QAAMiB,kBAAkB,GAAIG,KAAD,IAAW;AACpC,QAAID,OAAO,IAAI,CAACA,OAAO,CAACE,OAAR,CAAgBC,QAAhB,CAAyBF,KAAK,CAACR,MAA/B,CAAhB,EAAwD;AACtDF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAJD;;AAMA,QAAMa,KAAK,GAAIC,KAAD,IAAW;AACvBA,IAAAA,KAAK,CAACC,OAAN,CAAc,CAAd,IAAmB,CAAnB,IAAwBf,WAAW,CAAC,KAAD,CAAnC;AACD,GAFD,CAnCuC,CAuCvC;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEgB,YAAV;AAAwB,UAAA,GAAG,EAAC,eAA5B;AAA4C,UAAA,SAAS,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,2BAAtB;AAAkD,QAAA,QAAQ,EAAEjB,QAA5D;AAAsE,QAAA,QAAQ,EAAEK,QAAhF;AAA0F,QAAA,KAAK,EAAEL,QAAjG;AAA2G,QAAA,UAAU,EAAC;AAAtH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GArDuBL,S;;KAAAA,S;AAuDxBuB,IAAI,CAACzB,SAAL,GAAiB;AACfI,EAAAA,KAAK,EAAEJ,SAAS,CAAC0B,IADF;AAEfd,EAAAA,QAAQ,EAAEZ,SAAS,CAAC0B,IAFL;AAGfC,EAAAA,UAAU,EAAE3B,SAAS,CAAC4B,MAHP;AAIfC,EAAAA,cAAc,EAAE7B,SAAS,CAAC4B;AAJX,CAAjB","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nimport { DatePicker } from \"react-datepicker\";\r\n\r\nimport \"./index.scss\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport iconCalendar from \"assets/images/icons/icon-calendar.svg\";\r\n\r\nexport default function InputDate(props) {\r\n  // const [selectDate, setSelectDate] = useState(new Date());\r\n  // //   const [selectDate, setSelectDate] = useState(null);\r\n  // const onChange = (selectDate) => {\r\n  //   setSelectDate(selectDate);\r\n  // };\r\n\r\n  const [value, placeholder, name] = props;\r\n  const [isShowed, setIsShowed] = useState(false);\r\n\r\n  const datePickerChange = (value) => {\r\n    const target = {\r\n      target: {\r\n        value: value.selection,\r\n        name: name,\r\n      },\r\n    };\r\n    props.onChange(target);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  });\r\n\r\n  const refDate = useRef(null);\r\n  const handleClickOutside = (event) => {\r\n    if (refDate && !refDate.current.contains(event.target)) {\r\n      setIsShowed(false);\r\n    }\r\n  };\r\n\r\n  const check = (focus) => {\r\n    focus.indexOf(1) < 0 && setIsShowed(false);\r\n  };\r\n\r\n  // const displayDate = `${}`\r\n\r\n  return (\r\n    <div className=\"input-group\">\r\n      <div className=\"input-group-prepend bg-gray-900\">\r\n        <span className=\"input-group-text\">\r\n          <img src={iconCalendar} alt=\"icon calendar\" className=\"input-group-text\" />\r\n        </span>\r\n      </div>\r\n      <div className=\"\">\r\n        <DatePicker className=\" form-control text-center\" selected={isShowed} onChange={onChange} value={isShowed} dateFormat=\"dd/MM/yyyy\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nDate.propTypes = {\r\n  value: propTypes.func,\r\n  onChange: propTypes.func,\r\n  placehoder: propTypes.string,\r\n  outerClassName: propTypes.string,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}