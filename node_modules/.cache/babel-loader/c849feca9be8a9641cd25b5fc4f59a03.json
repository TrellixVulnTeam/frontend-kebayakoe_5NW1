{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Gilang\\\\Projects\\\\GRH-MERN\\\\frontend\\\\src\\\\elements\\\\Button\\\\Button.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport propTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Button(props) {\n  const className = [props.className];\n  if (props.isPrimary) className.push(\"btn-primary\");\n  if (props.isLight) className.push(\"btn-light\");\n  if (props.isLarge) className.push(\"btn-lg\");\n  if (props.isSmall) className.push(\"btn-sm\");\n  if (props.isBlock) className.push(\"btn-block\");\n  if (props.hasShadow) className.push(\"btn-shadow\");\n\n  const onClick = () => {\n    if (props.onClick) props.onClick();\n  };\n\n  if (props.isDisabled || props.isLoading) {\n    if (props.isDisabled) className.push(\"disabled\");\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: className.join(\" \"),\n      style: props.style,\n      children: props.isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spinner-border spinner-border-sm mx-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (props.type === \"link\") {\n    if (props.isExternal) {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: props.href,\n        className: className.join(\" \"),\n        style: props.style,\n        onClick: onClick,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  if (props.type === \"link\") {\n    if (props.isExternal) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: props.href,\n        className: className.join(\" \"),\n        style: props.style,\n        target: props.target === \"_blank\" ? \"_blank\" : undefined,\n        rel: props.target === \"_blank\" ? \"noopener noreferrer\" : undefined,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: props.href,\n        className: className.join(\" \"),\n        style: props.style,\n        onClick: onClick,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className.join(\" \"),\n    style: props.style,\n    onClick: onClick,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_c = Button;\nButton.propTypes = {\n  type: propTypes.oneOf([\"button\", \"link\"]),\n  onClick: propTypes.func,\n  href: propTypes.string,\n  target: propTypes.string,\n  className: propTypes.string,\n  isPrimary: propTypes.bool,\n  isLight: propTypes.bool,\n  isExternal: propTypes.bool,\n  isDisabled: propTypes.bool,\n  isLoading: propTypes.bool,\n  isSmall: propTypes.bool,\n  isLarge: propTypes.bool,\n  isBlock: propTypes.bool,\n  hasShadow: propTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/Users/USER/Documents/Gilang/Projects/GRH-MERN/frontend/src/elements/Button/Button.js"],"names":["React","Link","propTypes","Button","props","className","isPrimary","push","isLight","isLarge","isSmall","isBlock","hasShadow","onClick","isDisabled","isLoading","join","style","children","type","isExternal","href","target","undefined","oneOf","func","string","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACpC,QAAMC,SAAS,GAAG,CAACD,KAAK,CAACC,SAAP,CAAlB;AACA,MAAID,KAAK,CAACE,SAAV,EAAqBD,SAAS,CAACE,IAAV,CAAe,aAAf;AACrB,MAAIH,KAAK,CAACI,OAAV,EAAmBH,SAAS,CAACE,IAAV,CAAe,WAAf;AACnB,MAAIH,KAAK,CAACK,OAAV,EAAmBJ,SAAS,CAACE,IAAV,CAAe,QAAf;AACnB,MAAIH,KAAK,CAACM,OAAV,EAAmBL,SAAS,CAACE,IAAV,CAAe,QAAf;AACnB,MAAIH,KAAK,CAACO,OAAV,EAAmBN,SAAS,CAACE,IAAV,CAAe,WAAf;AACnB,MAAIH,KAAK,CAACQ,SAAV,EAAqBP,SAAS,CAACE,IAAV,CAAe,YAAf;;AAErB,QAAMM,OAAO,GAAG,MAAM;AACpB,QAAIT,KAAK,CAACS,OAAV,EAAmBT,KAAK,CAACS,OAAN;AACpB,GAFD;;AAIA,MAAIT,KAAK,CAACU,UAAN,IAAoBV,KAAK,CAACW,SAA9B,EAAyC;AACvC,QAAIX,KAAK,CAACU,UAAV,EAAsBT,SAAS,CAACE,IAAV,CAAe,UAAf;AACtB,wBACE;AAAM,MAAA,SAAS,EAAEF,SAAS,CAACW,IAAV,CAAe,GAAf,CAAjB;AAAsC,MAAA,KAAK,EAAEZ,KAAK,CAACa,KAAnD;AAAA,gBACGb,KAAK,CAACW,SAAN,gBACC;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADD,GAMCX,KAAK,CAACc;AAPV;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAED,MAAId,KAAK,CAACe,IAAN,KAAe,MAAnB,EAA2B;AACzB,QAAIf,KAAK,CAACgB,UAAV,EAAsB;AACpB,0BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEhB,KAAK,CAACiB,IAAhB;AAAsB,QAAA,SAAS,EAAEhB,SAAS,CAACW,IAAV,CAAe,GAAf,CAAjC;AAAsD,QAAA,KAAK,EAAEZ,KAAK,CAACa,KAAnE;AAA0E,QAAA,OAAO,EAAEJ,OAAnF;AAAA,kBACGT,KAAK,CAACc;AADT;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF;;AAED,MAAId,KAAK,CAACe,IAAN,KAAe,MAAnB,EAA2B;AACzB,QAAIf,KAAK,CAACgB,UAAV,EAAsB;AACpB,0BACE;AAAG,QAAA,IAAI,EAAEhB,KAAK,CAACiB,IAAf;AAAqB,QAAA,SAAS,EAAEhB,SAAS,CAACW,IAAV,CAAe,GAAf,CAAhC;AAAqD,QAAA,KAAK,EAAEZ,KAAK,CAACa,KAAlE;AAAyE,QAAA,MAAM,EAAEb,KAAK,CAACkB,MAAN,KAAiB,QAAjB,GAA4B,QAA5B,GAAuCC,SAAxH;AAAmI,QAAA,GAAG,EAAEnB,KAAK,CAACkB,MAAN,KAAiB,QAAjB,GAA4B,qBAA5B,GAAoDC,SAA5L;AAAA,kBACGnB,KAAK,CAACc;AADT;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND,MAMO;AACL,0BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEd,KAAK,CAACiB,IAAhB;AAAsB,QAAA,SAAS,EAAEhB,SAAS,CAACW,IAAV,CAAe,GAAf,CAAjC;AAAsD,QAAA,KAAK,EAAEZ,KAAK,CAACa,KAAnE;AAA0E,QAAA,OAAO,EAAEJ,OAAnF;AAAA,kBACGT,KAAK,CAACc;AADT;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF;;AAED,sBACE;AAAQ,IAAA,SAAS,EAAEb,SAAS,CAACW,IAAV,CAAe,GAAf,CAAnB;AAAwC,IAAA,KAAK,EAAEZ,KAAK,CAACa,KAArD;AAA4D,IAAA,OAAO,EAAEJ,OAArE;AAAA,cACGT,KAAK,CAACc;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KA5DuBf,M;AA8DxBA,MAAM,CAACD,SAAP,GAAmB;AACjBiB,EAAAA,IAAI,EAAEjB,SAAS,CAACsB,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,CAAhB,CADW;AAEjBX,EAAAA,OAAO,EAAEX,SAAS,CAACuB,IAFF;AAGjBJ,EAAAA,IAAI,EAAEnB,SAAS,CAACwB,MAHC;AAIjBJ,EAAAA,MAAM,EAAEpB,SAAS,CAACwB,MAJD;AAKjBrB,EAAAA,SAAS,EAAEH,SAAS,CAACwB,MALJ;AAMjBpB,EAAAA,SAAS,EAAEJ,SAAS,CAACyB,IANJ;AAOjBnB,EAAAA,OAAO,EAAEN,SAAS,CAACyB,IAPF;AAQjBP,EAAAA,UAAU,EAAElB,SAAS,CAACyB,IARL;AASjBb,EAAAA,UAAU,EAAEZ,SAAS,CAACyB,IATL;AAUjBZ,EAAAA,SAAS,EAAEb,SAAS,CAACyB,IAVJ;AAWjBjB,EAAAA,OAAO,EAAER,SAAS,CAACyB,IAXF;AAYjBlB,EAAAA,OAAO,EAAEP,SAAS,CAACyB,IAZF;AAajBhB,EAAAA,OAAO,EAAET,SAAS,CAACyB,IAbF;AAcjBf,EAAAA,SAAS,EAAEV,SAAS,CAACyB;AAdJ,CAAnB","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport propTypes from \"prop-types\";\r\n\r\nexport default function Button(props) {\r\n  const className = [props.className];\r\n  if (props.isPrimary) className.push(\"btn-primary\");\r\n  if (props.isLight) className.push(\"btn-light\");\r\n  if (props.isLarge) className.push(\"btn-lg\");\r\n  if (props.isSmall) className.push(\"btn-sm\");\r\n  if (props.isBlock) className.push(\"btn-block\");\r\n  if (props.hasShadow) className.push(\"btn-shadow\");\r\n\r\n  const onClick = () => {\r\n    if (props.onClick) props.onClick();\r\n  };\r\n\r\n  if (props.isDisabled || props.isLoading) {\r\n    if (props.isDisabled) className.push(\"disabled\");\r\n    return (\r\n      <span className={className.join(\" \")} style={props.style}>\r\n        {props.isLoading ? (\r\n          <>\r\n            <span className=\"spinner-border spinner-border-sm mx-5\"></span>\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </>\r\n        ) : (\r\n          props.children\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  if (props.type === \"link\") {\r\n    if (props.isExternal) {\r\n      return (\r\n        <Link to={props.href} className={className.join(\" \")} style={props.style} onClick={onClick}>\r\n          {props.children}\r\n        </Link>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (props.type === \"link\") {\r\n    if (props.isExternal) {\r\n      return (\r\n        <a href={props.href} className={className.join(\" \")} style={props.style} target={props.target === \"_blank\" ? \"_blank\" : undefined} rel={props.target === \"_blank\" ? \"noopener noreferrer\" : undefined}>\r\n          {props.children}\r\n        </a>\r\n      );\r\n    } else {\r\n      return (\r\n        <Link to={props.href} className={className.join(\" \")} style={props.style} onClick={onClick}>\r\n          {props.children}\r\n        </Link>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <button className={className.join(\" \")} style={props.style} onClick={onClick}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  type: propTypes.oneOf([\"button\", \"link\"]),\r\n  onClick: propTypes.func,\r\n  href: propTypes.string,\r\n  target: propTypes.string,\r\n  className: propTypes.string,\r\n  isPrimary: propTypes.bool,\r\n  isLight: propTypes.bool,\r\n  isExternal: propTypes.bool,\r\n  isDisabled: propTypes.bool,\r\n  isLoading: propTypes.bool,\r\n  isSmall: propTypes.bool,\r\n  isLarge: propTypes.bool,\r\n  isBlock: propTypes.bool,\r\n  hasShadow: propTypes.bool,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}