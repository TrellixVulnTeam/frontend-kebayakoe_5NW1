{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Gilang\\\\Projects\\\\SetiawanStore\\\\frontend\\\\src\\\\elements\\\\Form\\\\InputDate\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport propTypes from \"prop-types\";\nimport { DatePicker } from \"react-datepicker\";\nimport \"./index.scss\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport iconCalendar from \"assets/images/icons/icon-calendar.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputDate(props) {\n  _s();\n\n  const {\n    value,\n    placeholder,\n    name\n  } = props;\n  const [isShowed, setIsShowed] = useState(false);\n\n  const datePickerChange = value => {\n    const target = {\n      target: {\n        value: value.selection,\n        name: name\n      }\n    };\n    props.onChange(target);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n  const refDate = useRef(null);\n\n  const handleClickOutside = event => {\n    if (refDate && !refDate.current.contains(event.target)) {\n      setIsShowed(false);\n    }\n  };\n\n  const check = focus => {\n    focus.indexOf(1) < 0 && setIsShowed(false);\n  };\n\n  const displayDate = `${value.startDate ? formatDate(value.startDate) : \"\"}${value.endDate ? \" - \" + formatDate(value.endDate) : \"\"}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: refDate,\n    className: [\"input-date mb-3\", props.outerClassName].join(\" \"),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-prepend bg-gray-900\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-text\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: iconCalendar,\n            alt: \"icon calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        readOnly: true,\n        type: \"text\",\n        className: \"form-control\",\n        value: displayDate,\n        placeholder: placeholder,\n        onClick: () => setIsShowed(!isShowed)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), isShowed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-range-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(DateRange, {\n          editableDateInputs: true,\n          onChange: datePickerChange,\n          moveRangeOnFirstSelection: false,\n          onRangeFocusChange: check,\n          ranges: [value]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputDate, \"ZLOwXXRKtCs5wd+ODT29sKQXKE0=\");\n\n_c = InputDate;\nDate.propTypes = {\n  value: propTypes.object,\n  onChange: propTypes.func,\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string\n}; //   const { value, placeholder, name } = props;\n//   const [selectDate, setSelectDate] = useState(new Date());\n//   //   const [selectDate, setSelectDate] = useState(null);\n//   const onChange = (selectDate) => {\n//     setSelectDate(selectDate);\n//   };\n//   // const datePickerChange = (value) => {\n//   //   const target = {\n//   //     target: {\n//   //       value: value.selection,\n//   //       name: name,\n//   //     },\n//   //   };\n//   //   props.onChange(target);\n//   // };\n//   return (\n//     <div className=\"input-group\">\n//       <div className=\"input-group-prepend bg-gray-900\">\n//         <span className=\"input-group-text\">\n//           <img src={iconCalendar} alt=\"icon calendar\" className=\"input-group-text\" />\n//         </span>\n//       </div>\n//       <div className=\"\">\n//         <DatePicker className=\" form-control text-center\" selected={selectDate} onChange={onChange} minDate={new Date()} value={setSelectDate} dateFormat=\"dd/MM/yyyy\" placeholder={placeholder} />\n//       </div>\n//     </div>\n//   );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"InputDate\");","map":{"version":3,"sources":["C:/Users/USER/Documents/Gilang/Projects/SetiawanStore/frontend/src/elements/Form/InputDate/index.js"],"names":["React","useState","useEffect","useRef","propTypes","DatePicker","InputDate","props","value","placeholder","name","isShowed","setIsShowed","datePickerChange","target","selection","onChange","document","addEventListener","handleClickOutside","removeEventListener","refDate","event","current","contains","check","focus","indexOf","displayDate","startDate","formatDate","endDate","outerClassName","join","iconCalendar","Date","object","func","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nimport { DatePicker } from \"react-datepicker\";\r\n\r\nimport \"./index.scss\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport iconCalendar from \"assets/images/icons/icon-calendar.svg\";\r\n\r\nexport default function InputDate(props) {\r\n  const { value, placeholder, name } = props;\r\n  const [isShowed, setIsShowed] = useState(false);\r\n\r\n  const datePickerChange = (value) => {\r\n    const target = {\r\n      target: {\r\n        value: value.selection,\r\n        name: name,\r\n      },\r\n    };\r\n    props.onChange(target);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  });\r\n\r\n  const refDate = useRef(null);\r\n  const handleClickOutside = (event) => {\r\n    if (refDate && !refDate.current.contains(event.target)) {\r\n      setIsShowed(false);\r\n    }\r\n  };\r\n\r\n  const check = (focus) => {\r\n    focus.indexOf(1) < 0 && setIsShowed(false);\r\n  };\r\n\r\n  const displayDate = `${value.startDate ? formatDate(value.startDate) : \"\"}${value.endDate ? \" - \" + formatDate(value.endDate) : \"\"}`;\r\n\r\n  return (\r\n    <div ref={refDate} className={[\"input-date mb-3\", props.outerClassName].join(\" \")}>\r\n      <div className=\"input-group\">\r\n        <div className=\"input-group-prepend bg-gray-900\">\r\n          <span className=\"input-group-text\">\r\n            <img src={iconCalendar} alt=\"icon calendar\" />\r\n          </span>\r\n        </div>\r\n        <input readOnly type=\"text\" className=\"form-control\" value={displayDate} placeholder={placeholder} onClick={() => setIsShowed(!isShowed)} />\r\n\r\n        {isShowed && (\r\n          <div className=\"date-range-wrapper\">\r\n            <DateRange editableDateInputs={true} onChange={datePickerChange} moveRangeOnFirstSelection={false} onRangeFocusChange={check} ranges={[value]} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nDate.propTypes = {\r\n  value: propTypes.object,\r\n  onChange: propTypes.func,\r\n  placeholder: propTypes.string,\r\n  outerClassName: propTypes.string,\r\n};\r\n\r\n//   const { value, placeholder, name } = props;\r\n\r\n//   const [selectDate, setSelectDate] = useState(new Date());\r\n//   //   const [selectDate, setSelectDate] = useState(null);\r\n//   const onChange = (selectDate) => {\r\n//     setSelectDate(selectDate);\r\n//   };\r\n\r\n//   // const datePickerChange = (value) => {\r\n//   //   const target = {\r\n//   //     target: {\r\n//   //       value: value.selection,\r\n//   //       name: name,\r\n//   //     },\r\n//   //   };\r\n//   //   props.onChange(target);\r\n//   // };\r\n\r\n//   return (\r\n//     <div className=\"input-group\">\r\n//       <div className=\"input-group-prepend bg-gray-900\">\r\n//         <span className=\"input-group-text\">\r\n//           <img src={iconCalendar} alt=\"icon calendar\" className=\"input-group-text\" />\r\n//         </span>\r\n//       </div>\r\n//       <div className=\"\">\r\n//         <DatePicker className=\" form-control text-center\" selected={selectDate} onChange={onChange} minDate={new Date()} value={setSelectDate} dateFormat=\"dd/MM/yyyy\" placeholder={placeholder} />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}